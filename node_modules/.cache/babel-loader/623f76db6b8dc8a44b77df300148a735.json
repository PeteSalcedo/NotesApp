{"ast":null,"code":"import _classCallCheck from \"/home/hc043/Documents/HolaCode/notetakingpp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hc043/Documents/HolaCode/notetakingpp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hc043/Documents/HolaCode/notetakingpp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hc043/Documents/HolaCode/notetakingpp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hc043/Documents/HolaCode/notetakingpp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hc043/Documents/HolaCode/notetakingpp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hc043/Documents/HolaCode/notetakingpp/src/App.js\";\nimport React, { Component } from 'react';\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\nimport { DB_CONFIG } from './config/config';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.addNote = _this.addNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeNote = _this.removeNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.app = firebase.initializeApp(DB_CONFIG);\n    _this.database = _this.app.database().ref().child('notes'); // We're going to setup the React state of our component\n\n    _this.state = {\n      notes: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var previousNotes = this.state.notes; // DataSnapshot\n\n      this.database.on('child_added', function (snap) {\n        previousNotes.push({\n          id: snap.key,\n          noteContent: snap.val().noteContent\n        });\n\n        _this2.setState({\n          notes: previousNotes\n        });\n      });\n      this.database.on('child_removed', function (snap) {\n        for (var i = 0; i < previousNotes.length; i++) {\n          if (previousNotes[i].id === snap.key) {\n            previousNotes.splice(i, 1);\n          }\n        }\n\n        _this2.setState({\n          notes: previousNotes\n        });\n      });\n    }\n  }, {\n    key: \"addNote\",\n    value: function addNote(note) {\n      this.database.push().set({\n        noteContent: note\n      });\n    }\n  }, {\n    key: \"removeNote\",\n    value: function removeNote(noteId) {\n      console.log(\"from the parent: \" + noteId);\n      this.database.child(noteId).remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"notesWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notesHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"React & Firebase To-Do List\")), React.createElement(\"div\", {\n        className: \"notesBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.notes.map(function (note) {\n        return React.createElement(Note, {\n          noteContent: note.noteContent,\n          noteId: note.id,\n          key: note.id,\n          removeNote: _this3.removeNote,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"notesFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(NoteForm, {\n        addNote: this.addNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/hc043/Documents/HolaCode/notetakingpp/src/App.js"],"names":["React","Component","Note","NoteForm","DB_CONFIG","firebase","App","props","addNote","bind","removeNote","app","initializeApp","database","ref","child","state","notes","previousNotes","on","snap","push","id","key","noteContent","val","setState","i","length","splice","note","set","noteId","console","log","remove","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\nimport { DB_CONFIG } from './config/config';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.addNote = this.addNote.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n\n    this.app = firebase.initializeApp(DB_CONFIG);\n    this.database = this.app.database().ref().child('notes');\n\n    // We're going to setup the React state of our component\n    this.state = {\n      notes: [],\n    }\n  }\n\n  componentWillMount(){\n    const previousNotes = this.state.notes;\n\n    // DataSnapshot\n    this.database.on('child_added', snap => {\n      previousNotes.push({\n        id: snap.key,\n        noteContent: snap.val().noteContent,\n      })\n\n      this.setState({\n        notes: previousNotes\n      })\n    })\n\n    this.database.on('child_removed', snap => {\n      for(var i=0; i < previousNotes.length; i++){\n        if(previousNotes[i].id === snap.key){\n          previousNotes.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        notes: previousNotes\n      })\n    })\n  }\n\n  addNote(note){\n    this.database.push().set({ noteContent: note});\n  }\n\n  removeNote(noteId){\n    console.log(\"from the parent: \" + noteId);\n    this.database.child(noteId).remove();\n  }\n\n  render() {\n    return (\n      <div className=\"notesWrapper\">\n        <div className=\"notesHeader\">\n          <div className=\"heading\">React & Firebase To-Do List</div>\n        </div>\n        <div className=\"notesBody\">\n          {\n            this.state.notes.map((note) => {\n              return (\n                <Note noteContent={note.noteContent}\n                noteId={note.id}\n                key={note.id}\n                removeNote ={this.removeNote}/>\n              )\n            })\n          }\n        </div>\n        <div className=\"notesFooter\">\n          <NoteForm addNote={this.addNote} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}